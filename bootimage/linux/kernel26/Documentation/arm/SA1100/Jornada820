Instructions for installing the Linux kernel on the HP Jornada 820.
$Id: Jornada820,v 1.2 2004/06/28 20:06:56 fare Exp $

Our project page is at the following URL:
	http://jornada820.sourceforge.net/

<Step 0> - Prerequisites

* You need a CompactFlash card that fits into the Jornada's CF Type II slot.
 I (galmasi) use a small 32MB Sandisk.
 I (fare) use either a 8MB Sandisk or a gigabyte microdrive.
 Actually, if you have a NIC or if you're patient with your serial cable,
 you might be able to download the bootimage into RAM and boot from there.

* Since Linux will take over control of your RAM,
 you should backup any WinCE files and settings that you care to preserve,
 to CompactFlash or to a remote computer.
 Backups are always a good idea. At this time they are a *very* good idea.

* If you're downloading a binary bootimage from our site, jump to Step 5.
 Otherwise, you'll need a net-connected Linux workstation.

<Step 1> - Get an appropriate bootimage tree.

 Check out current cvs.sf.net bootimage:
	cvs -d:pserver:anonymous@cvs.sf.net:/cvsroot/jornada820 login
	cvs -d:pserver:anonymous@cvs.sf.net:/cvsroot/jornada820 checkout bootimage
 The password is empty, just hit enter at the prompt.

 The bootimage contains everything needed to make a bootable image file:
 not just the kernel, but also a ramdisk with enough things to survive,
 and even what's required to build a toolchain.

<Step 2> - Make the toolchain.
 If you don't have a toolchain, then you can
	make toolchain
 and it will fetch and compile the uClibc toolchain from uclibc.org.
 Actually, you may use any existing arm toolchain, but
 a glibc-based toolchain will have both more bloat and less features (!).

<Step 3> - Compile your bootimage
	make j820-26
 Is meant to do everything, getting a kernel from upstream,
 as well as basic userland utilities (busybox, pcmcia-cs) for the ramdiskimage.

 Note: for debugging purpose, you may edit the kernel command line in
 your kernel26/.config and add "console=ttySA0" so as to get console output
 on the serial port.

<Step 4> - Boot the kernel.
 Copy hpcbootm.exe from jornada820.sf.net together with j820-26 on your CF,
 and let it boot the kernel.

<Step 5> - Configure a Linux partition on your CF.

 The ramdisk has enough stuff (fdisk, NFS support, etc.)
 so you can configure a Linux partition on your CF.
 You may for instance chroot to a NFS partition where you preinstalled debian,
 and from there use all the usual utilities to prepare your partition on CF.
 See /etc/functions for a lot of functions that may help you along the way.

 When a Linux partition is detected at boottime, the ramdisk will
 automatically try to chain into it with pivot_root,
 instead of dropping you at the busybox prompt; to avoid this behaviour,
 create a file or directory named "noautomount" in your WinCE partition.

<Step 6> - Have FUN.

 I'm sure you can figure out how to do that by yourself.
 For instance, you can have a lot of fun using XEmacs to write programs
 to be run in clisp or ocaml.

<Step 7> - Be done.

 After Linux halts or reboots, it leaves the memory in a messy state that
 may confuse WinCE. Your machine may not be usable, and the way to restore
 factory default settings is to remove the batteries -- backup batteries
 (on the left side) as well as main batteries -- and unplug the computer.
 Note: to skip the configuration utility launched by WinCE at cold reboots,
 just kill it with Ctrl-Alt-Del. Aaaah!
