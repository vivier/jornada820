#!/bin/zsh -f

# Script to ease hacking with the build trees.
# To have all the dependencies, try that:
#	apt-get install zsh realpath

fullpath () {
  case "$1" in
    (/*) P=$1 ;;
    (*) P=$PWD/$1 ;;
  esac
  if Q=$(realpath $P 2>/dev/null) ; then P=$Q ; fi
  echo $P
}

PROG=$@
TOPDIR=$(dirname $(fullpath $0))

DBG () { print -r "$*" >&2 }
abort () { DBG "$1" ; exit ${2:-42} }

get_command () {
  COMMAND=()
  ARGUMENTS=()
  SEPARATOR=--
  case $1 in
    -*) SEPARATOR=$1 ; shift ;;
  esac
  while [ $# -gt 0 ]; do
    if [ "x$1" = "x$SEPARATOR" ] ; then
	shift ; ARGUMENTS=( $@ ) ; return
    else
	COMMAND=($COMMAND $1) ; shift
    fi
  done
}

op () {
  COMMAND=$1 ; shift
  operate_on_files $COMMAND -- $@
}
operate_on_files () {
  get_command $@
  for i in $ARGUMENTS ; do
    ( do_operate_on_file $i )
  done
}

do_operate_on_file () {
  file=$(fullpath $1)
  case $file in
    $TOPDIR/linux/build/kernel*) base=$TOPDIR/linux/build/ ;;
    $TOPDIR/linux/upstream/kernel*) base=$TOPDIR/linux/upstream/ ;;
    $TOPDIR/linux/kernel*) base=$TOPDIR/linux/ ;;
    *) return 1 ;;
  esac
  rel=${file#$base}
  linux=${rel%%/*}
  sub=${rel#*/}
  upstream=$TOPDIR/upstream/$rel
  hh=$TOPDIR/upstream/${linux}-hh/$sub
  work=$TOPDIR/linux/$rel
  build=$TOPDIR/work/$rel
  $COMMAND
}
create () {
  if [ -f $work ] ; then
    abort "file $work already exists"
  else
    mkdir -p $(dirname $work)
    cp -fa $upstream $work
    showorigver
  fi
}
import24 () {
  if [ -f $work ] ; then
    abort "file $work already exists"
  else
    mkdir -p $(dirname $work)
    cp -fa $(echo $upstream|perl -npe s,/kernel26/,/kernel/,) $work
  fi
}
diff24 () {
  if [ ! -f $work ] ; then
    abort "file $work doesn't exists"
  else
    diff -u \
	$(echo $work|perl -npe s,/kernel26/,/kernel/,) \
	$(echo $work|perl -npe s,/kernel/,/kernel26/,)
  fi
}
diffhv () {
  h=$TOPDIR/upstream/kernel-hh/$sub
  v=$TOPDIR/upstream/kernel/$sub
  diff -uN $h $v
}
diffm () {
  m=$TOPDIR/upstream/kernel24matan/$sub
  w=$TOPDIR/linux/kernel/$sub
  diff -uN $m $w
}
diffh () {
  m=$TOPDIR/upstream/kernel-hh/$sub
  w=$TOPDIR/linux/kernel/$sub
  diff -uN $m $w
}
diffv () {
  m=$TOPDIR/upstream/kernel/$sub
  w=$TOPDIR/linux/kernel/$sub
  diff -uabEN $m $w
}
tpatchhv () {
  h=$TOPDIR/upstream/kernel-hh/$sub
  v=$TOPDIR/upstream/kernel/$sub
  w=$work
  ( cd $(dirname $v) ; diff -uN $h $(basename $v) ) |
  patch --dry-run -d $(dirname $work) -p0
}
tpatchhv2 () {
  h=$TOPDIR/upstream/kernel-hh/$sub
  v=$TOPDIR/upstream/kernel/$sub
  w=$work
  ( cd $(dirname $w) ; diff -uN $h $(basename $w) ) |
  patch --dry-run -d $(dirname $v) -p0
}
dopatchhv () {
  h=$TOPDIR/upstream/kernel-hh/$sub
  v=$TOPDIR/upstream/kernel/$sub
  w=$work
  ( cd $(dirname $v) ; diff -uN $h $(basename $v) ) |
  patch -d $(dirname $work) -p0
}


difforigver () {
  diff -u $upstream $work 2>&1
}
showorigver () {
  if [ ! -f $upstream ] ; then
    abort "file $upstream doesn't exist"
  else
    base=$(basename $upstream)
    cvs=$(dirname $upstream)/CVS
    SER=$(perl -npe 's,^:[^:]*:([^:]*@)?(.*):.*,$2,' < $cvs/Root)
    VER=$(grep "^/$base/" < $cvs/Entries |
		cut -d/ -f3)
    echo "/* Jornada820 version based on $base $VER from $SER
 * \$Id\$
 */"
  fi
}
showhhver () {
  if [ ! -f $hh ] ; then
    abort "file $hh doesn't exist"
  else
    base=$(basename $hh)
    cvs=$(dirname $hh)/CVS
    SER=$(perl -npe 's,^:[^:]*:([^:]*@)?(.*):.*,$2,' < $cvs/Root)
    VER=$(grep "^/$base/" < $cvs/Entries |
		cut -d/ -f3)
    echo "/* Jornada820 version based on $base $VER from $SER
 * \$Id\$
 */"
  fi
}
showver () {
  if [ ! -f $work ] ; then
    abort "file $work doesn't exist"
  else
    base=$(basename $work)
    cvs=$(dirname $work)/CVS
    SER=$(perl -npe 's,^:[^:]*:([^:]*@)?(.*):.*,$2,' < $cvs/Root)
    VER=$(grep "^/$base/" < $cvs/Entries |
		cut -d/ -f3)
    echo "version $VER"
  fi
}
decrement_version () {
  echo $1 | perl -ne 's/([0-9]+)\.([0-9]+)/print "$1.".($2-1)."\n"/e'
}
diffprev () {
  if [ ! -f $work ] ; then
    abort "file $work doesn't exist"
  else
    base=$(basename $work)
    cvs=$(dirname $work)/CVS
    SER=$(perl -npe 's,^:[^:]*:([^:]*@)?(.*):.*,$2,' < $cvs/Root)
    VER=$(grep "^/$base/" < $cvs/Entries |
		cut -d/ -f3)
    (cd $TOPDIR ; file=linux/$rel
    A="cvs -z9 diff -u -r $(decrement_version $VER) $file"
    echo $A ; eval $A)
  fi
}
ensure_build_file () {
  if [ -f $work ] ; then
    cp -laf $work $build
  elif [ -f $upstream ] ; then
    cp -laf $upstream $build
  fi
}
compile () {
  ensure_build_file
  cd ${TOPDIR}/linux/build/$linux
  make ${sub%.c}.o
}
cross-execution () {
  /bin/echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfb\xff\xff\xff:/usr/local/bin/qemu-arm:' > /proc/sys/fs/binfmt_misc/register
}
run () {
  /usr/local/bin/qemu-arm $@
}
make_patch () {
  setopt LOCAL_OPTIONS EXTENDED_GLOB NULL_GLOB
  cd ${TOPDIR}/linux/kernel
  op diffv **/*~**CVS**(.)
}

$@
